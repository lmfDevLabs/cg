{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOFhSj222Af1AivKdQ2e3dM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pygame\n","from pygame.locals import *\n","from OpenGL.GL import *\n","from OpenGL.GLUT import *\n","from OpenGL.GLU import *\n","from math import cos, sin, pi\n","\n","def draw_circle(x, y, radius, num_segments=100):\n","    glBegin(GL_TRIANGLE_FAN)\n","    glVertex2f(x, y)\n","    for i in range(num_segments + 1):\n","        theta = 2.0 * pi * i / num_segments\n","        dx = radius * cos(theta)\n","        dy = radius * sin(theta)\n","        glVertex2f(x + dx, y + dy)\n","    glEnd()\n","\n","def main():\n","    pygame.init()\n","    screen_size = (800, 600)\n","    pygame.display.set_mode(screen_size, DOUBLEBUF | OPENGL)\n","\n","    glMatrixMode(GL_PROJECTION)\n","    glLoadIdentity()\n","    glOrtho(0, screen_size[0], 0, screen_size[1], -1, 1)\n","    glMatrixMode(GL_MODELVIEW)\n","\n","    # Set initial circle position\n","    circle_x = 400\n","    circle_y = 300\n","    circle_radius = 100\n","\n","    while True:\n","        for event in pygame.event.get():\n","            if event.type == pygame.QUIT:\n","                glutLeaveMainLoop()  # Add this line to exit the OpenGL loop\n","                pygame.quit()\n","                return\n","\n","        # Get the current state of the keyboard\n","        keys = pygame.key.get_pressed()\n","\n","        # Calculate new circle position based on key presses\n","        speed = 5  # Adjust this value to control the speed of movement\n","        if keys[K_LEFT]:\n","            circle_x -= speed\n","        if keys[K_RIGHT]:\n","            circle_x += speed\n","        if keys[K_UP]:\n","            circle_y += speed\n","        if keys[K_DOWN]:\n","            circle_y -= speed\n","\n","        # Check for boundary constraints\n","        if circle_x - circle_radius < 0:\n","            circle_x = circle_radius\n","        elif circle_x + circle_radius > screen_size[0]:\n","            circle_x = screen_size[0] - circle_radius\n","\n","        if circle_y - circle_radius < 0:\n","            circle_y = circle_radius\n","        elif circle_y + circle_radius > screen_size[1]:\n","            circle_y = screen_size[1] - circle_radius\n","\n","        #glClear(GL_COLOR_BUFFER_BIT)\n","\n","        glColor3f(1.0, 0.0, 0.0)  # Red color for the circle (R, G, B)\n","        draw_circle(circle_x, circle_y, circle_radius)\n","\n","        pygame.display.flip()\n","\n","if __name__ == \"__main__\":\n","    main()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"P0KhxnaQVIh6","executionInfo":{"status":"error","timestamp":1691266919773,"user_tz":300,"elapsed":39693,"user":{"displayName":"Carlos Talero","userId":"02343622721106739237"}},"outputId":"a5d6e7ca-923e-412a-941a-a7a998520a44"},"execution_count":9,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-f7886960a705>\u001b[0m in \u001b[0;36m<cell line: 72>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     71\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m     \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-9-f7886960a705>\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m     66\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     67\u001b[0m         \u001b[0mglColor3f\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1.0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.0\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Red color for the circle (R, G, B)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 68\u001b[0;31m         \u001b[0mdraw_circle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcircle_x\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcircle_y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcircle_radius\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     69\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     70\u001b[0m         \u001b[0mpygame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdisplay\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-9-f7886960a705>\u001b[0m in \u001b[0;36mdraw_circle\u001b[0;34m(x, y, radius, num_segments)\u001b[0m\n\u001b[1;32m     13\u001b[0m         \u001b[0mdx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mradius\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mcos\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtheta\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m         \u001b[0mdy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mradius\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0msin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtheta\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m         \u001b[0mglVertex2f\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mdx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mdy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m     \u001b[0mglEnd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/OpenGL/error.py\u001b[0m in \u001b[0;36mglCheckError\u001b[0;34m(self, result, baseOperation, cArguments, *args)\u001b[0m\n\u001b[1;32m    226\u001b[0m                     \u001b[0mshould\u001b[0m \u001b[0mcall\u001b[0m \u001b[0monBegin\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0monEnd\u001b[0m \u001b[0mappropriately\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    227\u001b[0m                 \"\"\"\n\u001b[0;32m--> 228\u001b[0;31m                 \u001b[0merr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_currentChecker\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    229\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0merr\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_noErrorResult\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    230\u001b[0m                     raise self._errorClass(\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]}]}